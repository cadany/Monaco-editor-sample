{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as DOM from './dom.js';\nimport * as dompurify from './dompurify/dompurify.js';\nimport { DomEmitter } from './event.js';\nimport { createElement } from './formattedTextRenderer.js';\nimport { StandardKeyboardEvent } from './keyboardEvent.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport { Event } from '../common/event.js';\nimport { escapeDoubleQuotes, parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\nimport { defaultGenerator } from '../common/idGenerator.js';\nimport { Lazy } from '../common/lazy.js';\nimport { DisposableStore } from '../common/lifecycle.js';\nimport { marked } from '../common/marked/marked.js';\nimport { parse } from '../common/marshalling.js';\nimport { FileAccess, Schemas } from '../common/network.js';\nimport { cloneAndChange } from '../common/objects.js';\nimport { dirname, resolvePath } from '../common/resources.js';\nimport { escape } from '../common/strings.js';\nimport { URI } from '../common/uri.js';\nvar defaultMarkedRenderers = Object.freeze({\n  image: function image(href, title, text) {\n    var dimensions = [];\n    var attributes = [];\n    if (href) {\n      var _parseHrefAndDimensio = parseHrefAndDimensions(href);\n      href = _parseHrefAndDimensio.href;\n      dimensions = _parseHrefAndDimensio.dimensions;\n      attributes.push(\"src=\\\"\".concat(escapeDoubleQuotes(href), \"\\\"\"));\n    }\n    if (text) {\n      attributes.push(\"alt=\\\"\".concat(escapeDoubleQuotes(text), \"\\\"\"));\n    }\n    if (title) {\n      attributes.push(\"title=\\\"\".concat(escapeDoubleQuotes(title), \"\\\"\"));\n    }\n    if (dimensions.length) {\n      attributes = attributes.concat(dimensions);\n    }\n    return '<img ' + attributes.join(' ') + '>';\n  },\n  paragraph: function paragraph(text) {\n    return \"<p>\".concat(text, \"</p>\");\n  },\n  link: function link(href, title, text) {\n    if (typeof href !== 'string') {\n      return '';\n    }\n    // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n    if (href === text) {\n      // raw link case\n      text = removeMarkdownEscapes(text);\n    }\n    title = typeof title === 'string' ? escapeDoubleQuotes(removeMarkdownEscapes(title)) : '';\n    href = removeMarkdownEscapes(href);\n    // HTML Encode href\n    href = href.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n    return \"<a href=\\\"\".concat(href, \"\\\" title=\\\"\").concat(title || href, \"\\\">\").concat(text, \"</a>\");\n  }\n});\n/**\n * Low-level way create a html element from a markdown string.\n *\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/contrib/markdownRenderer/browser/markdownRenderer.ts)\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\n */\nexport function renderMarkdown(markdown) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var markedOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _a;\n  var disposables = new DisposableStore();\n  var isDisposed = false;\n  var element = createElement(options);\n  var _uriMassage = function _uriMassage(part) {\n    var data;\n    try {\n      data = parse(decodeURIComponent(part));\n    } catch (e) {\n      // ignore\n    }\n    if (!data) {\n      return part;\n    }\n    data = cloneAndChange(data, function (value) {\n      if (markdown.uris && markdown.uris[value]) {\n        return URI.revive(markdown.uris[value]);\n      } else {\n        return undefined;\n      }\n    });\n    return encodeURIComponent(JSON.stringify(data));\n  };\n  var _href = function _href(href, isDomUri) {\n    var data = markdown.uris && markdown.uris[href];\n    var uri = URI.revive(data);\n    if (isDomUri) {\n      if (href.startsWith(Schemas.data + ':')) {\n        return href;\n      }\n      if (!uri) {\n        uri = URI.parse(href);\n      }\n      // this URI will end up as \"src\"-attribute of a dom node\n      // and because of that special rewriting needs to be done\n      // so that the URI uses a protocol that's understood by\n      // browsers (like http or https)\n      return FileAccess.uriToBrowserUri(uri).toString(true);\n    }\n    if (!uri) {\n      return href;\n    }\n    if (URI.parse(href).toString() === uri.toString()) {\n      return href; // no transformation performed\n    }\n\n    if (uri.query) {\n      uri = uri.with({\n        query: _uriMassage(uri.query)\n      });\n    }\n    return uri.toString();\n  };\n  var renderer = new marked.Renderer();\n  renderer.image = defaultMarkedRenderers.image;\n  renderer.link = defaultMarkedRenderers.link;\n  renderer.paragraph = defaultMarkedRenderers.paragraph;\n  // Will collect [id, renderedElement] tuples\n  var codeBlocks = [];\n  if (options.codeBlockRenderer) {\n    renderer.code = function (code, lang) {\n      var id = defaultGenerator.nextId();\n      var value = options.codeBlockRenderer(postProcessCodeBlockLanguageId(lang), code);\n      codeBlocks.push(value.then(function (element) {\n        return [id, element];\n      }));\n      return \"<div class=\\\"code\\\" data-code=\\\"\".concat(id, \"\\\">\").concat(escape(code), \"</div>\");\n    };\n  }\n  if (options.actionHandler) {\n    var _activateLink = function _activateLink(event) {\n      var target = event.target;\n      if (target.tagName !== 'A') {\n        target = target.parentElement;\n        if (!target || target.tagName !== 'A') {\n          return;\n        }\n      }\n      try {\n        var href = target.dataset['href'];\n        if (href) {\n          if (markdown.baseUri) {\n            href = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n          }\n          options.actionHandler.callback(href, event);\n        }\n      } catch (err) {\n        onUnexpectedError(err);\n      } finally {\n        event.preventDefault();\n      }\n    };\n    var onClick = options.actionHandler.disposables.add(new DomEmitter(element, 'click'));\n    var onAuxClick = options.actionHandler.disposables.add(new DomEmitter(element, 'auxclick'));\n    options.actionHandler.disposables.add(Event.any(onClick.event, onAuxClick.event)(function (e) {\n      var mouseEvent = new StandardMouseEvent(e);\n      if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\n        return;\n      }\n      _activateLink(mouseEvent);\n    }));\n    options.actionHandler.disposables.add(DOM.addDisposableListener(element, 'keydown', function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n      if (!keyboardEvent.equals(10 /* KeyCode.Space */) && !keyboardEvent.equals(3 /* KeyCode.Enter */)) {\n        return;\n      }\n      _activateLink(keyboardEvent);\n    }));\n  }\n  if (!markdown.supportHtml) {\n    // TODO: Can we deprecated this in favor of 'supportHtml'?\n    // Use our own sanitizer so that we can let through only spans.\n    // Otherwise, we'd be letting all html be rendered.\n    // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\n    // We always pass the output through dompurify after this so that we don't rely on\n    // marked for sanitization.\n    markedOptions.sanitizer = function (html) {\n      var match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\n      return match ? html : '';\n    };\n    markedOptions.sanitize = true;\n    markedOptions.silent = true;\n  }\n  markedOptions.renderer = renderer;\n  // values that are too long will freeze the UI\n  var value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\n  if (value.length > 100000) {\n    value = \"\".concat(value.substr(0, 100000), \"\\u2026\");\n  }\n  // escape theme icons\n  if (markdown.supportThemeIcons) {\n    value = markdownEscapeEscapedIcons(value);\n  }\n  var renderedMarkdown = marked.parse(value, markedOptions);\n  // Rewrite theme icons\n  if (markdown.supportThemeIcons) {\n    var elements = renderLabelWithIcons(renderedMarkdown);\n    renderedMarkdown = elements.map(function (e) {\n      return typeof e === 'string' ? e : e.outerHTML;\n    }).join('');\n  }\n  var htmlParser = new DOMParser();\n  var markdownHtmlDoc = htmlParser.parseFromString(sanitizeRenderedMarkdown(markdown, renderedMarkdown), 'text/html');\n  markdownHtmlDoc.body.querySelectorAll('img').forEach(function (img) {\n    var src = img.getAttribute('src'); // Get the raw 'src' attribute value as text, not the resolved 'src'\n    if (src) {\n      var href = src;\n      try {\n        if (markdown.baseUri) {\n          // absolute or relative local path, or file: uri\n          href = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n        }\n      } catch (err) {}\n      img.src = _href(href, true);\n    }\n  });\n  markdownHtmlDoc.body.querySelectorAll('a').forEach(function (a) {\n    var href = a.getAttribute('href'); // Get the raw 'href' attribute value as text, not the resolved 'href'\n    a.setAttribute('href', ''); // Clear out href. We use the `data-href` for handling clicks instead\n    if (!href || /^data:|javascript:/i.test(href) || /^command:/i.test(href) && !markdown.isTrusted || /^command:(\\/\\/\\/)?_workbench\\.downloadResource/i.test(href)) {\n      // drop the link\n      a.replaceWith.apply(a, _toConsumableArray(a.childNodes));\n    } else {\n      var resolvedHref = _href(href, false);\n      if (markdown.baseUri) {\n        resolvedHref = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n      }\n      a.dataset.href = resolvedHref;\n    }\n  });\n  element.innerHTML = sanitizeRenderedMarkdown(markdown, markdownHtmlDoc.body.innerHTML);\n  if (codeBlocks.length > 0) {\n    Promise.all(codeBlocks).then(function (tuples) {\n      var _a, _b;\n      if (isDisposed) {\n        return;\n      }\n      var renderedElements = new Map(tuples);\n      var placeholderElements = element.querySelectorAll(\"div[data-code]\");\n      var _iterator = _createForOfIteratorHelper(placeholderElements),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var placeholderElement = _step.value;\n          var renderedElement = renderedElements.get((_a = placeholderElement.dataset['code']) !== null && _a !== void 0 ? _a : '');\n          if (renderedElement) {\n            DOM.reset(placeholderElement, renderedElement);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      (_b = options.asyncRenderCallback) === null || _b === void 0 ? void 0 : _b.call(options);\n    });\n  }\n  // signal size changes for image tags\n  if (options.asyncRenderCallback) {\n    var _iterator2 = _createForOfIteratorHelper(element.getElementsByTagName('img')),\n      _step2;\n    try {\n      var _loop = function _loop() {\n        var img = _step2.value;\n        var listener = disposables.add(DOM.addDisposableListener(img, 'load', function () {\n          listener.dispose();\n          options.asyncRenderCallback();\n        }));\n      };\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return {\n    element: element,\n    dispose: function dispose() {\n      isDisposed = true;\n      disposables.dispose();\n    }\n  };\n}\nfunction postProcessCodeBlockLanguageId(lang) {\n  if (!lang) {\n    return '';\n  }\n  var parts = lang.split(/[\\s+|:|,|\\{|\\?]/, 1);\n  if (parts.length) {\n    return parts[0];\n  }\n  return lang;\n}\nfunction resolveWithBaseUri(baseUri, href) {\n  var hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\n  if (hasScheme) {\n    return href;\n  }\n  if (baseUri.path.endsWith('/')) {\n    return resolvePath(baseUri, href).toString();\n  } else {\n    return resolvePath(dirname(baseUri), href).toString();\n  }\n}\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\n  var _getSanitizerOptions = getSanitizerOptions(options),\n    config = _getSanitizerOptions.config,\n    allowedSchemes = _getSanitizerOptions.allowedSchemes;\n  dompurify.addHook('uponSanitizeAttribute', function (element, e) {\n    if (e.attrName === 'style' || e.attrName === 'class') {\n      if (element.tagName === 'SPAN') {\n        if (e.attrName === 'style') {\n          e.keepAttr = /^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/.test(e.attrValue);\n          return;\n        } else if (e.attrName === 'class') {\n          e.keepAttr = /^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/.test(e.attrValue);\n          return;\n        }\n      }\n      e.keepAttr = false;\n      return;\n    }\n  });\n  var hook = DOM.hookDomPurifyHrefAndSrcSanitizer(allowedSchemes);\n  try {\n    return dompurify.sanitize(renderedMarkdown, Object.assign(Object.assign({}, config), {\n      RETURN_TRUSTED_TYPE: true\n    }));\n  } finally {\n    dompurify.removeHook('uponSanitizeAttribute');\n    hook.dispose();\n  }\n}\nexport var allowedMarkdownAttr = ['align', 'autoplay', 'alt', 'class', 'controls', 'data-code', 'data-href', 'height', 'href', 'loop', 'muted', 'playsinline', 'poster', 'src', 'style', 'target', 'title', 'width', 'start'];\nfunction getSanitizerOptions(options) {\n  var allowedSchemes = [Schemas.http, Schemas.https, Schemas.mailto, Schemas.data, Schemas.file, Schemas.vscodeFileResource, Schemas.vscodeRemote, Schemas.vscodeRemoteResource];\n  if (options.isTrusted) {\n    allowedSchemes.push(Schemas.command);\n  }\n  return {\n    config: {\n      // allowedTags should included everything that markdown renders to.\n      // Since we have our own sanitize function for marked, it's possible we missed some tag so let dompurify make sure.\n      // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\n      // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\n      ALLOWED_TAGS: _toConsumableArray(DOM.basicMarkupHtmlTags),\n      ALLOWED_ATTR: allowedMarkdownAttr,\n      ALLOW_UNKNOWN_PROTOCOLS: true\n    },\n    allowedSchemes: allowedSchemes\n  };\n}\nvar unescapeInfo = new Map([['&quot;', '\"'], ['&nbsp;', ' '], ['&amp;', '&'], ['&#39;', '\\''], ['&lt;', '<'], ['&gt;', '>']]);\nvar plainTextRenderer = new Lazy(function () {\n  var renderer = new marked.Renderer();\n  renderer.code = function (code) {\n    return code;\n  };\n  renderer.blockquote = function (quote) {\n    return quote;\n  };\n  renderer.html = function (_html) {\n    return '';\n  };\n  renderer.heading = function (text, _level, _raw) {\n    return text + '\\n';\n  };\n  renderer.hr = function () {\n    return '';\n  };\n  renderer.list = function (body, _ordered) {\n    return body;\n  };\n  renderer.listitem = function (text) {\n    return text + '\\n';\n  };\n  renderer.paragraph = function (text) {\n    return text + '\\n';\n  };\n  renderer.table = function (header, body) {\n    return header + body + '\\n';\n  };\n  renderer.tablerow = function (content) {\n    return content;\n  };\n  renderer.tablecell = function (content, _flags) {\n    return content + ' ';\n  };\n  renderer.strong = function (text) {\n    return text;\n  };\n  renderer.em = function (text) {\n    return text;\n  };\n  renderer.codespan = function (code) {\n    return code;\n  };\n  renderer.br = function () {\n    return '\\n';\n  };\n  renderer.del = function (text) {\n    return text;\n  };\n  renderer.image = function (_href, _title, _text) {\n    return '';\n  };\n  renderer.text = function (text) {\n    return text;\n  };\n  renderer.link = function (_href, _title, text) {\n    return text;\n  };\n  return renderer;\n});","map":{"version":3,"names":["DOM","dompurify","DomEmitter","createElement","StandardKeyboardEvent","StandardMouseEvent","renderLabelWithIcons","onUnexpectedError","Event","escapeDoubleQuotes","parseHrefAndDimensions","removeMarkdownEscapes","markdownEscapeEscapedIcons","defaultGenerator","Lazy","DisposableStore","marked","parse","FileAccess","Schemas","cloneAndChange","dirname","resolvePath","escape","URI","defaultMarkedRenderers","Object","freeze","image","href","title","text","dimensions","attributes","_parseHrefAndDimensio","push","concat","length","join","paragraph","link","replace","renderMarkdown","markdown","options","arguments","undefined","markedOptions","_a","disposables","isDisposed","element","_uriMassage","part","data","decodeURIComponent","e","value","uris","revive","encodeURIComponent","JSON","stringify","_href","isDomUri","uri","startsWith","uriToBrowserUri","toString","query","with","renderer","Renderer","codeBlocks","codeBlockRenderer","code","lang","id","nextId","postProcessCodeBlockLanguageId","then","actionHandler","_activateLink","event","target","tagName","parentElement","dataset","baseUri","resolveWithBaseUri","from","callback","err","preventDefault","onClick","add","onAuxClick","any","mouseEvent","leftButton","middleButton","addDisposableListener","keyboardEvent","equals","supportHtml","sanitizer","html","match","isTrusted","sanitize","silent","substr","supportThemeIcons","renderedMarkdown","elements","map","outerHTML","htmlParser","DOMParser","markdownHtmlDoc","parseFromString","sanitizeRenderedMarkdown","body","querySelectorAll","forEach","img","src","getAttribute","a","setAttribute","test","replaceWith","apply","_toConsumableArray","childNodes","resolvedHref","innerHTML","Promise","all","tuples","_b","renderedElements","Map","placeholderElements","_iterator","_createForOfIteratorHelper","_step","s","n","done","placeholderElement","renderedElement","get","reset","f","asyncRenderCallback","call","_iterator2","getElementsByTagName","_step2","_loop","listener","dispose","parts","split","hasScheme","path","endsWith","_getSanitizerOptions","getSanitizerOptions","config","allowedSchemes","addHook","attrName","keepAttr","attrValue","hook","hookDomPurifyHrefAndSrcSanitizer","assign","RETURN_TRUSTED_TYPE","removeHook","allowedMarkdownAttr","http","https","mailto","file","vscodeFileResource","vscodeRemote","vscodeRemoteResource","command","ALLOWED_TAGS","basicMarkupHtmlTags","ALLOWED_ATTR","ALLOW_UNKNOWN_PROTOCOLS","unescapeInfo","plainTextRenderer","blockquote","quote","_html","heading","_level","_raw","hr","list","_ordered","listitem","table","header","tablerow","content","tablecell","_flags","strong","em","codespan","br","del","_title","_text"],"sources":["/Users/cadany/WebstormProjects/monaco/node_modules/monaco-editor/esm/vs/base/browser/markdownRenderer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as DOM from './dom.js';\nimport * as dompurify from './dompurify/dompurify.js';\nimport { DomEmitter } from './event.js';\nimport { createElement } from './formattedTextRenderer.js';\nimport { StandardKeyboardEvent } from './keyboardEvent.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport { Event } from '../common/event.js';\nimport { escapeDoubleQuotes, parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\nimport { defaultGenerator } from '../common/idGenerator.js';\nimport { Lazy } from '../common/lazy.js';\nimport { DisposableStore } from '../common/lifecycle.js';\nimport { marked } from '../common/marked/marked.js';\nimport { parse } from '../common/marshalling.js';\nimport { FileAccess, Schemas } from '../common/network.js';\nimport { cloneAndChange } from '../common/objects.js';\nimport { dirname, resolvePath } from '../common/resources.js';\nimport { escape } from '../common/strings.js';\nimport { URI } from '../common/uri.js';\nconst defaultMarkedRenderers = Object.freeze({\n    image: (href, title, text) => {\n        let dimensions = [];\n        let attributes = [];\n        if (href) {\n            ({ href, dimensions } = parseHrefAndDimensions(href));\n            attributes.push(`src=\"${escapeDoubleQuotes(href)}\"`);\n        }\n        if (text) {\n            attributes.push(`alt=\"${escapeDoubleQuotes(text)}\"`);\n        }\n        if (title) {\n            attributes.push(`title=\"${escapeDoubleQuotes(title)}\"`);\n        }\n        if (dimensions.length) {\n            attributes = attributes.concat(dimensions);\n        }\n        return '<img ' + attributes.join(' ') + '>';\n    },\n    paragraph: (text) => {\n        return `<p>${text}</p>`;\n    },\n    link: (href, title, text) => {\n        if (typeof href !== 'string') {\n            return '';\n        }\n        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n        if (href === text) { // raw link case\n            text = removeMarkdownEscapes(text);\n        }\n        title = typeof title === 'string' ? escapeDoubleQuotes(removeMarkdownEscapes(title)) : '';\n        href = removeMarkdownEscapes(href);\n        // HTML Encode href\n        href = href.replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n        return `<a href=\"${href}\" title=\"${title || href}\">${text}</a>`;\n    },\n});\n/**\n * Low-level way create a html element from a markdown string.\n *\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/contrib/markdownRenderer/browser/markdownRenderer.ts)\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\n */\nexport function renderMarkdown(markdown, options = {}, markedOptions = {}) {\n    var _a;\n    const disposables = new DisposableStore();\n    let isDisposed = false;\n    const element = createElement(options);\n    const _uriMassage = function (part) {\n        let data;\n        try {\n            data = parse(decodeURIComponent(part));\n        }\n        catch (e) {\n            // ignore\n        }\n        if (!data) {\n            return part;\n        }\n        data = cloneAndChange(data, value => {\n            if (markdown.uris && markdown.uris[value]) {\n                return URI.revive(markdown.uris[value]);\n            }\n            else {\n                return undefined;\n            }\n        });\n        return encodeURIComponent(JSON.stringify(data));\n    };\n    const _href = function (href, isDomUri) {\n        const data = markdown.uris && markdown.uris[href];\n        let uri = URI.revive(data);\n        if (isDomUri) {\n            if (href.startsWith(Schemas.data + ':')) {\n                return href;\n            }\n            if (!uri) {\n                uri = URI.parse(href);\n            }\n            // this URI will end up as \"src\"-attribute of a dom node\n            // and because of that special rewriting needs to be done\n            // so that the URI uses a protocol that's understood by\n            // browsers (like http or https)\n            return FileAccess.uriToBrowserUri(uri).toString(true);\n        }\n        if (!uri) {\n            return href;\n        }\n        if (URI.parse(href).toString() === uri.toString()) {\n            return href; // no transformation performed\n        }\n        if (uri.query) {\n            uri = uri.with({ query: _uriMassage(uri.query) });\n        }\n        return uri.toString();\n    };\n    const renderer = new marked.Renderer();\n    renderer.image = defaultMarkedRenderers.image;\n    renderer.link = defaultMarkedRenderers.link;\n    renderer.paragraph = defaultMarkedRenderers.paragraph;\n    // Will collect [id, renderedElement] tuples\n    const codeBlocks = [];\n    if (options.codeBlockRenderer) {\n        renderer.code = (code, lang) => {\n            const id = defaultGenerator.nextId();\n            const value = options.codeBlockRenderer(postProcessCodeBlockLanguageId(lang), code);\n            codeBlocks.push(value.then(element => [id, element]));\n            return `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\n        };\n    }\n    if (options.actionHandler) {\n        const _activateLink = function (event) {\n            let target = event.target;\n            if (target.tagName !== 'A') {\n                target = target.parentElement;\n                if (!target || target.tagName !== 'A') {\n                    return;\n                }\n            }\n            try {\n                let href = target.dataset['href'];\n                if (href) {\n                    if (markdown.baseUri) {\n                        href = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n                    }\n                    options.actionHandler.callback(href, event);\n                }\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                event.preventDefault();\n            }\n        };\n        const onClick = options.actionHandler.disposables.add(new DomEmitter(element, 'click'));\n        const onAuxClick = options.actionHandler.disposables.add(new DomEmitter(element, 'auxclick'));\n        options.actionHandler.disposables.add(Event.any(onClick.event, onAuxClick.event)(e => {\n            const mouseEvent = new StandardMouseEvent(e);\n            if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\n                return;\n            }\n            _activateLink(mouseEvent);\n        }));\n        options.actionHandler.disposables.add(DOM.addDisposableListener(element, 'keydown', (e) => {\n            const keyboardEvent = new StandardKeyboardEvent(e);\n            if (!keyboardEvent.equals(10 /* KeyCode.Space */) && !keyboardEvent.equals(3 /* KeyCode.Enter */)) {\n                return;\n            }\n            _activateLink(keyboardEvent);\n        }));\n    }\n    if (!markdown.supportHtml) {\n        // TODO: Can we deprecated this in favor of 'supportHtml'?\n        // Use our own sanitizer so that we can let through only spans.\n        // Otherwise, we'd be letting all html be rendered.\n        // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\n        // We always pass the output through dompurify after this so that we don't rely on\n        // marked for sanitization.\n        markedOptions.sanitizer = (html) => {\n            const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\n            return match ? html : '';\n        };\n        markedOptions.sanitize = true;\n        markedOptions.silent = true;\n    }\n    markedOptions.renderer = renderer;\n    // values that are too long will freeze the UI\n    let value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\n    if (value.length > 100000) {\n        value = `${value.substr(0, 100000)}…`;\n    }\n    // escape theme icons\n    if (markdown.supportThemeIcons) {\n        value = markdownEscapeEscapedIcons(value);\n    }\n    let renderedMarkdown = marked.parse(value, markedOptions);\n    // Rewrite theme icons\n    if (markdown.supportThemeIcons) {\n        const elements = renderLabelWithIcons(renderedMarkdown);\n        renderedMarkdown = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\n    }\n    const htmlParser = new DOMParser();\n    const markdownHtmlDoc = htmlParser.parseFromString(sanitizeRenderedMarkdown(markdown, renderedMarkdown), 'text/html');\n    markdownHtmlDoc.body.querySelectorAll('img')\n        .forEach(img => {\n        const src = img.getAttribute('src'); // Get the raw 'src' attribute value as text, not the resolved 'src'\n        if (src) {\n            let href = src;\n            try {\n                if (markdown.baseUri) { // absolute or relative local path, or file: uri\n                    href = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n                }\n            }\n            catch (err) { }\n            img.src = _href(href, true);\n        }\n    });\n    markdownHtmlDoc.body.querySelectorAll('a')\n        .forEach(a => {\n        const href = a.getAttribute('href'); // Get the raw 'href' attribute value as text, not the resolved 'href'\n        a.setAttribute('href', ''); // Clear out href. We use the `data-href` for handling clicks instead\n        if (!href\n            || /^data:|javascript:/i.test(href)\n            || (/^command:/i.test(href) && !markdown.isTrusted)\n            || /^command:(\\/\\/\\/)?_workbench\\.downloadResource/i.test(href)) {\n            // drop the link\n            a.replaceWith(...a.childNodes);\n        }\n        else {\n            let resolvedHref = _href(href, false);\n            if (markdown.baseUri) {\n                resolvedHref = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n            }\n            a.dataset.href = resolvedHref;\n        }\n    });\n    element.innerHTML = sanitizeRenderedMarkdown(markdown, markdownHtmlDoc.body.innerHTML);\n    if (codeBlocks.length > 0) {\n        Promise.all(codeBlocks).then((tuples) => {\n            var _a, _b;\n            if (isDisposed) {\n                return;\n            }\n            const renderedElements = new Map(tuples);\n            const placeholderElements = element.querySelectorAll(`div[data-code]`);\n            for (const placeholderElement of placeholderElements) {\n                const renderedElement = renderedElements.get((_a = placeholderElement.dataset['code']) !== null && _a !== void 0 ? _a : '');\n                if (renderedElement) {\n                    DOM.reset(placeholderElement, renderedElement);\n                }\n            }\n            (_b = options.asyncRenderCallback) === null || _b === void 0 ? void 0 : _b.call(options);\n        });\n    }\n    // signal size changes for image tags\n    if (options.asyncRenderCallback) {\n        for (const img of element.getElementsByTagName('img')) {\n            const listener = disposables.add(DOM.addDisposableListener(img, 'load', () => {\n                listener.dispose();\n                options.asyncRenderCallback();\n            }));\n        }\n    }\n    return {\n        element,\n        dispose: () => {\n            isDisposed = true;\n            disposables.dispose();\n        }\n    };\n}\nfunction postProcessCodeBlockLanguageId(lang) {\n    if (!lang) {\n        return '';\n    }\n    const parts = lang.split(/[\\s+|:|,|\\{|\\?]/, 1);\n    if (parts.length) {\n        return parts[0];\n    }\n    return lang;\n}\nfunction resolveWithBaseUri(baseUri, href) {\n    const hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\n    if (hasScheme) {\n        return href;\n    }\n    if (baseUri.path.endsWith('/')) {\n        return resolvePath(baseUri, href).toString();\n    }\n    else {\n        return resolvePath(dirname(baseUri), href).toString();\n    }\n}\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\n    const { config, allowedSchemes } = getSanitizerOptions(options);\n    dompurify.addHook('uponSanitizeAttribute', (element, e) => {\n        if (e.attrName === 'style' || e.attrName === 'class') {\n            if (element.tagName === 'SPAN') {\n                if (e.attrName === 'style') {\n                    e.keepAttr = /^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/.test(e.attrValue);\n                    return;\n                }\n                else if (e.attrName === 'class') {\n                    e.keepAttr = /^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/.test(e.attrValue);\n                    return;\n                }\n            }\n            e.keepAttr = false;\n            return;\n        }\n    });\n    const hook = DOM.hookDomPurifyHrefAndSrcSanitizer(allowedSchemes);\n    try {\n        return dompurify.sanitize(renderedMarkdown, Object.assign(Object.assign({}, config), { RETURN_TRUSTED_TYPE: true }));\n    }\n    finally {\n        dompurify.removeHook('uponSanitizeAttribute');\n        hook.dispose();\n    }\n}\nexport const allowedMarkdownAttr = [\n    'align',\n    'autoplay',\n    'alt',\n    'class',\n    'controls',\n    'data-code',\n    'data-href',\n    'height',\n    'href',\n    'loop',\n    'muted',\n    'playsinline',\n    'poster',\n    'src',\n    'style',\n    'target',\n    'title',\n    'width',\n    'start',\n];\nfunction getSanitizerOptions(options) {\n    const allowedSchemes = [\n        Schemas.http,\n        Schemas.https,\n        Schemas.mailto,\n        Schemas.data,\n        Schemas.file,\n        Schemas.vscodeFileResource,\n        Schemas.vscodeRemote,\n        Schemas.vscodeRemoteResource,\n    ];\n    if (options.isTrusted) {\n        allowedSchemes.push(Schemas.command);\n    }\n    return {\n        config: {\n            // allowedTags should included everything that markdown renders to.\n            // Since we have our own sanitize function for marked, it's possible we missed some tag so let dompurify make sure.\n            // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\n            // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\n            ALLOWED_TAGS: [...DOM.basicMarkupHtmlTags],\n            ALLOWED_ATTR: allowedMarkdownAttr,\n            ALLOW_UNKNOWN_PROTOCOLS: true,\n        },\n        allowedSchemes\n    };\n}\nconst unescapeInfo = new Map([\n    ['&quot;', '\"'],\n    ['&nbsp;', ' '],\n    ['&amp;', '&'],\n    ['&#39;', '\\''],\n    ['&lt;', '<'],\n    ['&gt;', '>'],\n]);\nconst plainTextRenderer = new Lazy(() => {\n    const renderer = new marked.Renderer();\n    renderer.code = (code) => {\n        return code;\n    };\n    renderer.blockquote = (quote) => {\n        return quote;\n    };\n    renderer.html = (_html) => {\n        return '';\n    };\n    renderer.heading = (text, _level, _raw) => {\n        return text + '\\n';\n    };\n    renderer.hr = () => {\n        return '';\n    };\n    renderer.list = (body, _ordered) => {\n        return body;\n    };\n    renderer.listitem = (text) => {\n        return text + '\\n';\n    };\n    renderer.paragraph = (text) => {\n        return text + '\\n';\n    };\n    renderer.table = (header, body) => {\n        return header + body + '\\n';\n    };\n    renderer.tablerow = (content) => {\n        return content;\n    };\n    renderer.tablecell = (content, _flags) => {\n        return content + ' ';\n    };\n    renderer.strong = (text) => {\n        return text;\n    };\n    renderer.em = (text) => {\n        return text;\n    };\n    renderer.codespan = (code) => {\n        return code;\n    };\n    renderer.br = () => {\n        return '\\n';\n    };\n    renderer.del = (text) => {\n        return text;\n    };\n    renderer.image = (_href, _title, _text) => {\n        return '';\n    };\n    renderer.text = (text) => {\n        return text;\n    };\n    renderer.link = (_href, _title, text) => {\n        return text;\n    };\n    return renderer;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _assertThisInitialized from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createClass from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './glyphMargin.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nexport var DecorationToRender = /*#__PURE__*/_createClass(function DecorationToRender(startLineNumber, endLineNumber, className) {\n  _classCallCheck(this, DecorationToRender);\n  this._decorationToRenderBrand = undefined;\n  this.startLineNumber = +startLineNumber;\n  this.endLineNumber = +endLineNumber;\n  this.className = String(className);\n});\nexport var DedupOverlay = /*#__PURE__*/function (_DynamicViewOverlay) {\n  _inherits(DedupOverlay, _DynamicViewOverlay);\n  var _super = _createSuper(DedupOverlay);\n  function DedupOverlay() {\n    _classCallCheck(this, DedupOverlay);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DedupOverlay, [{\n    key: \"_render\",\n    value: function _render(visibleStartLineNumber, visibleEndLineNumber, decorations) {\n      var output = [];\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        output[lineIndex] = [];\n      }\n      if (decorations.length === 0) {\n        return output;\n      }\n      decorations.sort(function (a, b) {\n        if (a.className === b.className) {\n          if (a.startLineNumber === b.startLineNumber) {\n            return a.endLineNumber - b.endLineNumber;\n          }\n          return a.startLineNumber - b.startLineNumber;\n        }\n        return a.className < b.className ? -1 : 1;\n      });\n      var prevClassName = null;\n      var prevEndLineIndex = 0;\n      for (var i = 0, len = decorations.length; i < len; i++) {\n        var d = decorations[i];\n        var className = d.className;\n        var startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n        var endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n        if (prevClassName === className) {\n          startLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n          prevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n        } else {\n          prevClassName = className;\n          prevEndLineIndex = endLineIndex;\n        }\n        for (var _i = startLineIndex; _i <= prevEndLineIndex; _i++) {\n          output[_i].push(prevClassName);\n        }\n      }\n      return output;\n    }\n  }]);\n  return DedupOverlay;\n}(DynamicViewOverlay);\nexport var GlyphMarginOverlay = /*#__PURE__*/function (_DedupOverlay) {\n  _inherits(GlyphMarginOverlay, _DedupOverlay);\n  var _super2 = _createSuper(GlyphMarginOverlay);\n  function GlyphMarginOverlay(context) {\n    var _this;\n    _classCallCheck(this, GlyphMarginOverlay);\n    _this = _super2.call(this);\n    _this._context = context;\n    var options = _this._context.configuration.options;\n    var layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n    _this._lineHeight = options.get(63 /* EditorOption.lineHeight */);\n    _this._glyphMargin = options.get(54 /* EditorOption.glyphMargin */);\n    _this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n    _this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n    _this._renderResult = null;\n    _this._context.addEventHandler(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(GlyphMarginOverlay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n      this._renderResult = null;\n      _get(_getPrototypeOf(GlyphMarginOverlay.prototype), \"dispose\", this).call(this);\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      var layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n      this._lineHeight = options.get(63 /* EditorOption.lineHeight */);\n      this._glyphMargin = options.get(54 /* EditorOption.glyphMargin */);\n      this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n      this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n    // --- end event handlers\n  }, {\n    key: \"_getDecorations\",\n    value: function _getDecorations(ctx) {\n      var decorations = ctx.getDecorationsInViewport();\n      var r = [];\n      var rLen = 0;\n      for (var i = 0, len = decorations.length; i < len; i++) {\n        var d = decorations[i];\n        var glyphMarginClassName = d.options.glyphMarginClassName;\n        if (glyphMarginClassName) {\n          r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, glyphMarginClassName);\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      if (!this._glyphMargin) {\n        this._renderResult = null;\n        return;\n      }\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n      var toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n      var lineHeight = this._lineHeight.toString();\n      var left = this._glyphMarginLeft.toString();\n      var width = this._glyphMarginWidth.toString();\n      var common = '\" style=\"left:' + left + 'px;width:' + width + 'px' + ';height:' + lineHeight + 'px;\"></div>';\n      var output = [];\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        var classNames = toRender[lineIndex];\n        if (classNames.length === 0) {\n          output[lineIndex] = '';\n        } else {\n          output[lineIndex] = '<div class=\"cgmr codicon ' + classNames.join(' ') + common;\n        }\n      }\n      this._renderResult = output;\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n      var lineIndex = lineNumber - startLineNumber;\n      if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n        return '';\n      }\n      return this._renderResult[lineIndex];\n    }\n  }]);\n  return GlyphMarginOverlay;\n}(DedupOverlay);","map":{"version":3,"names":["DynamicViewOverlay","DecorationToRender","_createClass","startLineNumber","endLineNumber","className","_classCallCheck","_decorationToRenderBrand","undefined","String","DedupOverlay","_DynamicViewOverlay","_inherits","_super","_createSuper","apply","arguments","key","value","_render","visibleStartLineNumber","visibleEndLineNumber","decorations","output","lineNumber","lineIndex","length","sort","a","b","prevClassName","prevEndLineIndex","i","len","d","startLineIndex","Math","max","endLineIndex","min","push","GlyphMarginOverlay","_DedupOverlay","_super2","context","_this","call","_context","options","configuration","layoutInfo","get","_lineHeight","_glyphMargin","_glyphMarginLeft","glyphMarginLeft","_glyphMarginWidth","glyphMarginWidth","_renderResult","addEventHandler","_assertThisInitialized","dispose","removeEventHandler","_get","_getPrototypeOf","prototype","onConfigurationChanged","e","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_getDecorations","ctx","getDecorationsInViewport","r","rLen","glyphMarginClassName","range","prepareRender","visibleRange","toRender","lineHeight","toString","left","width","common","classNames","join","render"],"sources":["/Users/cadany/WebstormProjects/monaco/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './glyphMargin.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nexport class DecorationToRender {\n    constructor(startLineNumber, endLineNumber, className) {\n        this._decorationToRenderBrand = undefined;\n        this.startLineNumber = +startLineNumber;\n        this.endLineNumber = +endLineNumber;\n        this.className = String(className);\n    }\n}\nexport class DedupOverlay extends DynamicViewOverlay {\n    _render(visibleStartLineNumber, visibleEndLineNumber, decorations) {\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = [];\n        }\n        if (decorations.length === 0) {\n            return output;\n        }\n        decorations.sort((a, b) => {\n            if (a.className === b.className) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.endLineNumber - b.endLineNumber;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return (a.className < b.className ? -1 : 1);\n        });\n        let prevClassName = null;\n        let prevEndLineIndex = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const className = d.className;\n            let startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n            const endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n            if (prevClassName === className) {\n                startLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n                prevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n            }\n            else {\n                prevClassName = className;\n                prevEndLineIndex = endLineIndex;\n            }\n            for (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n                output[i].push(prevClassName);\n            }\n        }\n        return output;\n    }\n}\nexport class GlyphMarginOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(63 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(54 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(63 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(54 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const glyphMarginClassName = d.options.glyphMarginClassName;\n            if (glyphMarginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, glyphMarginClassName);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        if (!this._glyphMargin) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const lineHeight = this._lineHeight.toString();\n        const left = this._glyphMarginLeft.toString();\n        const width = this._glyphMarginWidth.toString();\n        const common = '\" style=\"left:' + left + 'px;width:' + width + 'px' + ';height:' + lineHeight + 'px;\"></div>';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const classNames = toRender[lineIndex];\n            if (classNames.length === 0) {\n                output[lineIndex] = '';\n            }\n            else {\n                output[lineIndex] = ('<div class=\"cgmr codicon '\n                    + classNames.join(' ')\n                    + common);\n            }\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
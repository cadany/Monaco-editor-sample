{"ast":null,"code":"var _jsxFileName = \"/Users/cadany/WebstormProjects/monaco/src/CodeEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as monaco from 'monaco-editor';\nimport { registerAutoCompletionLanguage } from \"./proxy\";\nimport { editor } from \"monaco-editor\";\nvar IStandaloneEditorConstructionOptions = editor.IStandaloneEditorConstructionOptions;\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ITextModel = editor.ITextModel; // window.MonacoEnvironment = {\n//     getWorker: function (_moduleId: any, label: string) {\n//         // console.log(metadata.languages);\n//         switch (label) {\n//             case 'editorWorkerService':\n//                 return new Worker(new URL('monaco-editor/esm/vs/editor/editor.worker', import.meta.url));\n//             case 'css':\n//             case 'less':\n//             case 'scss':\n//                 return new Worker(new URL('monaco-editor/esm/vs/language/css/css.worker', import.meta.url));\n//             case 'handlebars':\n//             case 'html':\n//             case 'razor':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/html/html.worker', import.meta.url),\n//                 );\n//             case 'json':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/json/json.worker', import.meta.url),\n//                 );\n//             case 'javascript':\n//             case 'typescript':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/typescript/ts.worker', import.meta.url),\n//                 );\n//             default:\n//                 throw new Error(`Unknown label ${label}`);\n//         }\n//     }\n// };\nexport const CodeEditor = (props, context) => {\n  _s();\n  const container = useRef(null);\n  let editor;\n  let autoCompletion;\n  //自定义提示\n  let customAutoCompletion = [{\n    label: \"item11\",\n    insertText: \"item text\",\n    kind: \"6\",\n    detail: \"TABLE.COLLUMN\"\n  }];\n  useEffect(() => {\n    console.log(\"mount\");\n    if (container.current) {\n      //didMount/didUpdateMount\n      editor = monaco.editor.create(container.current, {\n        ...props\n      });\n      autoCompletion = registerAutoCompletionLanguage(props.language, customAutoCompletion);\n      return () => {\n        //didUnmount\n        console.log(\"dispose \");\n        if (autoCompletion) autoCompletion.dispose(); //防止自动提示重复\n        editor.dispose();\n      };\n    }\n  }, []);\n  let modelsql = monaco.editor.createModel(\"select * from table\", \"sql\");\n  let modelredis = monaco.editor.createModel(\"INFO\", \"redis\");\n  function changeModel(type) {\n    switch (type) {\n      case 1:\n        editor.setModel(modelsql);\n        break;\n      default:\n        editor.setModel(modelredis);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"calc(100%)\",\n      width: \"calc(100%)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => changeModel(1),\n      children: \"model sql\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => changeModel(0),\n      children: \"model redis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Editor\",\n      ref: container,\n      style: {\n        height: \"calc(100%)\",\n        width: \"calc(100%)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 12\n  }, this);\n};\n_s(CodeEditor, \"gP936EAkbq44zYYGRnj90r2fLhg=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useRef","useEffect","monaco","registerAutoCompletionLanguage","editor","IStandaloneEditorConstructionOptions","Button","jsxDEV","_jsxDEV","ITextModel","CodeEditor","props","context","_s","container","autoCompletion","customAutoCompletion","label","insertText","kind","detail","console","log","current","create","language","dispose","modelsql","createModel","modelredis","changeModel","type","setModel","style","height","width","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","_c","$RefreshReg$"],"sources":["/Users/cadany/WebstormProjects/monaco/src/CodeEditor.tsx"],"sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport * as monaco from 'monaco-editor';\nimport {registerAutoCompletionLanguage} from \"./proxy\";\nimport {editor} from \"monaco-editor\";\nimport IStandaloneEditorConstructionOptions = editor.IStandaloneEditorConstructionOptions;\nimport {Button} from \"antd\";\nimport ITextModel = editor.ITextModel;\n\n\n// window.MonacoEnvironment = {\n//     getWorker: function (_moduleId: any, label: string) {\n//         // console.log(metadata.languages);\n//         switch (label) {\n//             case 'editorWorkerService':\n//                 return new Worker(new URL('monaco-editor/esm/vs/editor/editor.worker', import.meta.url));\n//             case 'css':\n//             case 'less':\n//             case 'scss':\n//                 return new Worker(new URL('monaco-editor/esm/vs/language/css/css.worker', import.meta.url));\n//             case 'handlebars':\n//             case 'html':\n//             case 'razor':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/html/html.worker', import.meta.url),\n//                 );\n//             case 'json':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/json/json.worker', import.meta.url),\n//                 );\n//             case 'javascript':\n//             case 'typescript':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/typescript/ts.worker', import.meta.url),\n//                 );\n//             default:\n//                 throw new Error(`Unknown label ${label}`);\n//         }\n//     }\n// };\n\ninterface ISuggestions {\n    label: string;\n    kind: string;\n    insertText: string;\n    detail?: string;\n}\n\nexport const CodeEditor: React.FC<IStandaloneEditorConstructionOptions> = (props, context) => {\n    const container = useRef<HTMLDivElement>(null);\n    let editor: monaco.editor.IStandaloneCodeEditor;\n    let autoCompletion: monaco.IDisposable;\n    //自定义提示\n    let customAutoCompletion: ISuggestions[] = [{label: \"item11\", insertText: \"item text\", kind: \"6\", detail:\"TABLE.COLLUMN\"}];\n\n    useEffect(() => {\n        console.log(\"mount\");\n        if (container.current) {\n            //didMount/didUpdateMount\n            editor = monaco.editor.create(container.current, {...props});\n            autoCompletion = registerAutoCompletionLanguage(props.language, customAutoCompletion);\n            return () => {\n                //didUnmount\n                console.log(\"dispose \");\n                if (autoCompletion) autoCompletion.dispose();   //防止自动提示重复\n                editor.dispose();\n            };\n        }\n    }, []);\n\n    let modelsql: ITextModel = monaco.editor.createModel(\"select * from table\", \"sql\");\n    let modelredis: ITextModel = monaco.editor.createModel(\"INFO\", \"redis\");\n\n    function changeModel(type:number) {\n        switch (type) {\n            case 1: editor.setModel(modelsql);break;\n            default: editor.setModel(modelredis);\n        }\n    }\n\n    return <div style={{height: \"calc(100%)\", width: \"calc(100%)\"}}>\n        <Button onClick={()=>changeModel(1)}>model sql</Button>\n        <Button onClick={()=>changeModel(0)}>model redis</Button>\n        <div className=\"Editor\" ref={container}style={{height: \"calc(100%)\", width: \"calc(100%)\"}}></div>\n    </div>;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
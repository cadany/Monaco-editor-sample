{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nclass ReadOnlyMessageController extends Disposable {\n  constructor(editor) {\n    super();\n    this.editor = editor;\n    this._register(this.editor.onDidAttemptReadOnlyEdit(() => this._onDidAttemptReadOnlyEdit()));\n  }\n  _onDidAttemptReadOnlyEdit() {\n    const messageController = MessageController.get(this.editor);\n    if (messageController && this.editor.hasModel()) {\n      if (this.editor.isSimpleWidget) {\n        messageController.showMessage(nls.localize('editor.simple.readonly', \"Cannot edit in read-only input\"), this.editor.getPosition());\n      } else {\n        messageController.showMessage(nls.localize('editor.readonly', \"Cannot edit in read-only editor\"), this.editor.getPosition());\n      }\n    }\n  }\n}\nReadOnlyMessageController.ID = 'editor.contrib.readOnlyMessageController';\nexport { ReadOnlyMessageController };\nregisterEditorContribution(ReadOnlyMessageController.ID, ReadOnlyMessageController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);","map":{"version":3,"names":["Disposable","registerEditorContribution","MessageController","nls","ReadOnlyMessageController","constructor","editor","_register","onDidAttemptReadOnlyEdit","_onDidAttemptReadOnlyEdit","messageController","get","hasModel","isSimpleWidget","showMessage","localize","getPosition","ID"],"sources":["/Users/cadany/WebstormProjects/monaco-editor-sample/node_modules/monaco-editor/esm/vs/editor/contrib/readOnlyMessage/browser/contribution.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nclass ReadOnlyMessageController extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._register(this.editor.onDidAttemptReadOnlyEdit(() => this._onDidAttemptReadOnlyEdit()));\n    }\n    _onDidAttemptReadOnlyEdit() {\n        const messageController = MessageController.get(this.editor);\n        if (messageController && this.editor.hasModel()) {\n            if (this.editor.isSimpleWidget) {\n                messageController.showMessage(nls.localize('editor.simple.readonly', \"Cannot edit in read-only input\"), this.editor.getPosition());\n            }\n            else {\n                messageController.showMessage(nls.localize('editor.readonly', \"Cannot edit in read-only editor\"), this.editor.getPosition());\n            }\n        }\n    }\n}\nReadOnlyMessageController.ID = 'editor.contrib.readOnlyMessageController';\nexport { ReadOnlyMessageController };\nregisterEditorContribution(ReadOnlyMessageController.ID, ReadOnlyMessageController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,sCAAsC;AACjE,SAASC,0BAA0B,QAAQ,sCAAsC;AACjF,SAASC,iBAAiB,QAAQ,4CAA4C;AAC9E,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,MAAMC,yBAAyB,SAASJ,UAAU,CAAC;EAC/CK,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,EAAE;IACP,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACD,MAAM,CAACE,wBAAwB,CAAC,MAAM,IAAI,CAACC,yBAAyB,EAAE,CAAC,CAAC;EAChG;EACAA,yBAAyBA,CAAA,EAAG;IACxB,MAAMC,iBAAiB,GAAGR,iBAAiB,CAACS,GAAG,CAAC,IAAI,CAACL,MAAM,CAAC;IAC5D,IAAII,iBAAiB,IAAI,IAAI,CAACJ,MAAM,CAACM,QAAQ,EAAE,EAAE;MAC7C,IAAI,IAAI,CAACN,MAAM,CAACO,cAAc,EAAE;QAC5BH,iBAAiB,CAACI,WAAW,CAACX,GAAG,CAACY,QAAQ,CAAC,wBAAwB,EAAE,gCAAgC,CAAC,EAAE,IAAI,CAACT,MAAM,CAACU,WAAW,EAAE,CAAC;MACtI,CAAC,MACI;QACDN,iBAAiB,CAACI,WAAW,CAACX,GAAG,CAACY,QAAQ,CAAC,iBAAiB,EAAE,iCAAiC,CAAC,EAAE,IAAI,CAACT,MAAM,CAACU,WAAW,EAAE,CAAC;MAChI;IACJ;EACJ;AACJ;AACAZ,yBAAyB,CAACa,EAAE,GAAG,0CAA0C;AACzE,SAASb,yBAAyB;AAClCH,0BAA0B,CAACG,yBAAyB,CAACa,EAAE,EAAEb,yBAAyB,EAAE,CAAC,CAAC,6DAA6D"},"metadata":{},"sourceType":"module","externalDependencies":[]}
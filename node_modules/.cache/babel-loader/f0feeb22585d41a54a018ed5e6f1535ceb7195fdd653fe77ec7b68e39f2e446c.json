{"ast":null,"code":"import _toConsumableArray from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _inherits from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createForOfIteratorHelper from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nexport var Command = /*#__PURE__*/function () {\n  function Command(opts) {\n    _classCallCheck(this, Command);\n    this.id = opts.id;\n    this.precondition = opts.precondition;\n    this._kbOpts = opts.kbOpts;\n    this._menuOpts = opts.menuOpts;\n    this._description = opts.description;\n  }\n  _createClass(Command, [{\n    key: \"register\",\n    value: function register() {\n      var _this = this;\n      if (Array.isArray(this._menuOpts)) {\n        this._menuOpts.forEach(this._registerMenuItem, this);\n      } else if (this._menuOpts) {\n        this._registerMenuItem(this._menuOpts);\n      }\n      if (this._kbOpts) {\n        var kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n        var _iterator = _createForOfIteratorHelper(kbOptsArr),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var kbOpts = _step.value;\n            var kbWhen = kbOpts.kbExpr;\n            if (this.precondition) {\n              if (kbWhen) {\n                kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n              } else {\n                kbWhen = this.precondition;\n              }\n            }\n            var desc = {\n              id: this.id,\n              weight: kbOpts.weight,\n              args: kbOpts.args,\n              when: kbWhen,\n              primary: kbOpts.primary,\n              secondary: kbOpts.secondary,\n              win: kbOpts.win,\n              linux: kbOpts.linux,\n              mac: kbOpts.mac\n            };\n            KeybindingsRegistry.registerKeybindingRule(desc);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      CommandsRegistry.registerCommand({\n        id: this.id,\n        handler: function handler(accessor, args) {\n          return _this.runCommand(accessor, args);\n        },\n        description: this._description\n      });\n    }\n  }, {\n    key: \"_registerMenuItem\",\n    value: function _registerMenuItem(item) {\n      MenuRegistry.appendMenuItem(item.menuId, {\n        group: item.group,\n        command: {\n          id: this.id,\n          title: item.title,\n          icon: item.icon,\n          precondition: this.precondition\n        },\n        when: item.when,\n        order: item.order\n      });\n    }\n  }]);\n  return Command;\n}();\nexport var MultiCommand = /*#__PURE__*/function (_Command) {\n  _inherits(MultiCommand, _Command);\n  var _super = _createSuper(MultiCommand);\n  function MultiCommand() {\n    var _this2;\n    _classCallCheck(this, MultiCommand);\n    _this2 = _super.apply(this, arguments);\n    _this2._implementations = [];\n    return _this2;\n  }\n  /**\n   * A higher priority gets to be looked at first\n   */\n  _createClass(MultiCommand, [{\n    key: \"addImplementation\",\n    value: function addImplementation(priority, name, implementation) {\n      var _this3 = this;\n      this._implementations.push({\n        priority: priority,\n        name: name,\n        implementation: implementation\n      });\n      this._implementations.sort(function (a, b) {\n        return b.priority - a.priority;\n      });\n      return {\n        dispose: function dispose() {\n          for (var i = 0; i < _this3._implementations.length; i++) {\n            if (_this3._implementations[i].implementation === implementation) {\n              _this3._implementations.splice(i, 1);\n              return;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      var logService = accessor.get(ILogService);\n      logService.trace(\"Executing Command '\".concat(this.id, \"' which has \").concat(this._implementations.length, \" bound.\"));\n      var _iterator2 = _createForOfIteratorHelper(this._implementations),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var impl = _step2.value;\n          var result = impl.implementation(accessor, args);\n          if (result) {\n            logService.trace(\"Command '\".concat(this.id, \"' was handled by '\").concat(impl.name, \"'.\"));\n            if (typeof result === 'boolean') {\n              return;\n            }\n            return result;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      logService.trace(\"The Command '\".concat(this.id, \"' was not handled by any implementation.\"));\n    }\n  }]);\n  return MultiCommand;\n}(Command);\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport var ProxyCommand = /*#__PURE__*/function (_Command2) {\n  _inherits(ProxyCommand, _Command2);\n  var _super2 = _createSuper(ProxyCommand);\n  function ProxyCommand(command, opts) {\n    var _this4;\n    _classCallCheck(this, ProxyCommand);\n    _this4 = _super2.call(this, opts);\n    _this4.command = command;\n    return _this4;\n  }\n  _createClass(ProxyCommand, [{\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      return this.command.runCommand(accessor, args);\n    }\n  }]);\n  return ProxyCommand;\n}(Command);\nexport var EditorCommand = /*#__PURE__*/function (_Command3) {\n  _inherits(EditorCommand, _Command3);\n  var _super3 = _createSuper(EditorCommand);\n  function EditorCommand() {\n    _classCallCheck(this, EditorCommand);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(EditorCommand, [{\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      var _this5 = this;\n      return EditorCommand.runEditorCommand(accessor, args, this.precondition, function (accessor, editor, args) {\n        return _this5.runEditorCommand(accessor, editor, args);\n      });\n    }\n  }], [{\n    key: \"bindToContribution\",\n    value:\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    function bindToContribution(controllerGetter) {\n      return /*#__PURE__*/function (_EditorCommand) {\n        _inherits(EditorControllerCommandImpl, _EditorCommand);\n        var _super4 = _createSuper(EditorControllerCommandImpl);\n        function EditorControllerCommandImpl(opts) {\n          var _this6;\n          _classCallCheck(this, EditorControllerCommandImpl);\n          _this6 = _super4.call(this, opts);\n          _this6._callback = opts.handler;\n          return _this6;\n        }\n        _createClass(EditorControllerCommandImpl, [{\n          key: \"runEditorCommand\",\n          value: function runEditorCommand(accessor, editor, args) {\n            var controller = controllerGetter(editor);\n            if (controller) {\n              this._callback(controller, args);\n            }\n          }\n        }]);\n        return EditorControllerCommandImpl;\n      }(EditorCommand);\n    }\n  }, {\n    key: \"runEditorCommand\",\n    value: function runEditorCommand(accessor, args, precondition, runner) {\n      var codeEditorService = accessor.get(ICodeEditorService);\n      // Find the editor with text focus or active\n      var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n      if (!editor) {\n        // well, at least we tried...\n        return;\n      }\n      return editor.invokeWithinContext(function (editorAccessor) {\n        var kbService = editorAccessor.get(IContextKeyService);\n        if (!kbService.contextMatchesRules(withNullAsUndefined(precondition))) {\n          // precondition does not hold\n          return;\n        }\n        return runner(editorAccessor, editor, args);\n      });\n    }\n  }]);\n  return EditorCommand;\n}(Command);\nexport var EditorAction = /*#__PURE__*/function (_EditorCommand2) {\n  _inherits(EditorAction, _EditorCommand2);\n  var _super5 = _createSuper(EditorAction);\n  function EditorAction(opts) {\n    var _this7;\n    _classCallCheck(this, EditorAction);\n    _this7 = _super5.call(this, EditorAction.convertOptions(opts));\n    _this7.label = opts.label;\n    _this7.alias = opts.alias;\n    return _this7;\n  }\n  _createClass(EditorAction, [{\n    key: \"runEditorCommand\",\n    value: function runEditorCommand(accessor, editor, args) {\n      this.reportTelemetry(accessor, editor);\n      return this.run(accessor, editor, args || {});\n    }\n  }, {\n    key: \"reportTelemetry\",\n    value: function reportTelemetry(accessor, editor) {\n      accessor.get(ITelemetryService).publicLog2('editorActionInvoked', {\n        name: this.label,\n        id: this.id\n      });\n    }\n  }], [{\n    key: \"convertOptions\",\n    value: function convertOptions(opts) {\n      var menuOpts;\n      if (Array.isArray(opts.menuOpts)) {\n        menuOpts = opts.menuOpts;\n      } else if (opts.menuOpts) {\n        menuOpts = [opts.menuOpts];\n      } else {\n        menuOpts = [];\n      }\n      function withDefaults(item) {\n        if (!item.menuId) {\n          item.menuId = MenuId.EditorContext;\n        }\n        if (!item.title) {\n          item.title = opts.label;\n        }\n        item.when = ContextKeyExpr.and(opts.precondition, item.when);\n        return item;\n      }\n      if (Array.isArray(opts.contextMenuOpts)) {\n        var _menuOpts;\n        (_menuOpts = menuOpts).push.apply(_menuOpts, _toConsumableArray(opts.contextMenuOpts.map(withDefaults)));\n      } else if (opts.contextMenuOpts) {\n        menuOpts.push(withDefaults(opts.contextMenuOpts));\n      }\n      opts.menuOpts = menuOpts;\n      return opts;\n    }\n  }]);\n  return EditorAction;\n}(EditorCommand);\nexport var MultiEditorAction = /*#__PURE__*/function (_EditorAction) {\n  _inherits(MultiEditorAction, _EditorAction);\n  var _super6 = _createSuper(MultiEditorAction);\n  function MultiEditorAction() {\n    var _this8;\n    _classCallCheck(this, MultiEditorAction);\n    _this8 = _super6.apply(this, arguments);\n    _this8._implementations = [];\n    return _this8;\n  }\n  /**\n   * A higher priority gets to be looked at first\n   */\n  _createClass(MultiEditorAction, [{\n    key: \"addImplementation\",\n    value: function addImplementation(priority, implementation) {\n      var _this9 = this;\n      this._implementations.push([priority, implementation]);\n      this._implementations.sort(function (a, b) {\n        return b[0] - a[0];\n      });\n      return {\n        dispose: function dispose() {\n          for (var i = 0; i < _this9._implementations.length; i++) {\n            if (_this9._implementations[i][1] === implementation) {\n              _this9._implementations.splice(i, 1);\n              return;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"run\",\n    value: function run(accessor, editor, args) {\n      var _iterator3 = _createForOfIteratorHelper(this._implementations),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var impl = _step3.value;\n          var result = impl[1](accessor, editor, args);\n          if (result) {\n            if (typeof result === 'boolean') {\n              return;\n            }\n            return result;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n  return MultiEditorAction;\n}(EditorAction);\n//#endregion EditorAction\n//#region EditorAction2\nexport var EditorAction2 = /*#__PURE__*/function (_Action) {\n  _inherits(EditorAction2, _Action);\n  var _super7 = _createSuper(EditorAction2);\n  function EditorAction2() {\n    _classCallCheck(this, EditorAction2);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(EditorAction2, [{\n    key: \"run\",\n    value: function run(accessor) {\n      var _this10 = this;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      // Find the editor with text focus or active\n      var codeEditorService = accessor.get(ICodeEditorService);\n      var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n      if (!editor) {\n        // well, at least we tried...\n        return;\n      }\n      // precondition does hold\n      return editor.invokeWithinContext(function (editorAccessor) {\n        var kbService = editorAccessor.get(IContextKeyService);\n        if (kbService.contextMatchesRules(withNullAsUndefined(_this10.desc.precondition))) {\n          return _this10.runEditorCommand.apply(_this10, [editorAccessor, editor].concat(args));\n        }\n      });\n    }\n  }]);\n  return EditorAction2;\n}(Action2);\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    var instaService = accessor.get(IInstantiationService);\n    var resource = args[0],\n      position = args[1];\n    assertType(URI.isUri(resource));\n    assertType(Position.isIPosition(position));\n    var model = accessor.get(IModelService).getModel(resource);\n    if (model) {\n      var editorPosition = Position.lift(position);\n      return instaService.invokeFunction.apply(instaService, [handler, model, editorPosition].concat(_toConsumableArray(args.slice(2))));\n    }\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      }).finally(function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerEditorCommand(editorCommand) {\n  EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n  return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n  var action = new ctor();\n  EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n  return action;\n}\nexport function registerMultiEditorAction(action) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n  return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n  EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n  function getEditorCommand(commandId) {\n    return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n  }\n  EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n  function getEditorActions() {\n    return EditorContributionRegistry.INSTANCE.getEditorActions();\n  }\n  EditorExtensionsRegistry.getEditorActions = getEditorActions;\n  function getEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions();\n  }\n  EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n  function getSomeEditorContributions(ids) {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(function (c) {\n      return ids.indexOf(c.id) >= 0;\n    });\n  }\n  EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n  function getDiffEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n  }\n  EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nvar Extensions = {\n  EditorCommonContributions: 'editor.contributions'\n};\nvar EditorContributionRegistry = /*#__PURE__*/function () {\n  function EditorContributionRegistry() {\n    _classCallCheck(this, EditorContributionRegistry);\n    this.editorContributions = [];\n    this.diffEditorContributions = [];\n    this.editorActions = [];\n    this.editorCommands = Object.create(null);\n  }\n  _createClass(EditorContributionRegistry, [{\n    key: \"registerEditorContribution\",\n    value: function registerEditorContribution(id, ctor, instantiation) {\n      this.editorContributions.push({\n        id: id,\n        ctor: ctor,\n        instantiation: instantiation\n      });\n    }\n  }, {\n    key: \"getEditorContributions\",\n    value: function getEditorContributions() {\n      return this.editorContributions.slice(0);\n    }\n  }, {\n    key: \"getDiffEditorContributions\",\n    value: function getDiffEditorContributions() {\n      return this.diffEditorContributions.slice(0);\n    }\n  }, {\n    key: \"registerEditorAction\",\n    value: function registerEditorAction(action) {\n      action.register();\n      this.editorActions.push(action);\n    }\n  }, {\n    key: \"getEditorActions\",\n    value: function getEditorActions() {\n      return this.editorActions;\n    }\n  }, {\n    key: \"registerEditorCommand\",\n    value: function registerEditorCommand(editorCommand) {\n      editorCommand.register();\n      this.editorCommands[editorCommand.id] = editorCommand;\n    }\n  }, {\n    key: \"getEditorCommand\",\n    value: function getEditorCommand(commandId) {\n      return this.editorCommands[commandId] || null;\n    }\n  }]);\n  return EditorContributionRegistry;\n}();\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n  command.register();\n  return command;\n}\nexport var UndoCommand = registerCommand(new MultiCommand({\n  id: 'undo',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0 /* KeybindingWeight.EditorCore */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n  },\n\n  menuOpts: [{\n    menuId: MenuId.MenubarEditMenu,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miUndo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Undo\"),\n    order: 1\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('undo', \"Undo\"),\n    order: 1\n  }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, {\n  id: 'default:undo',\n  precondition: undefined\n}));\nexport var RedoCommand = registerCommand(new MultiCommand({\n  id: 'redo',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0 /* KeybindingWeight.EditorCore */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */\n    }\n  },\n\n  menuOpts: [{\n    menuId: MenuId.MenubarEditMenu,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miRedo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Redo\"),\n    order: 2\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('redo', \"Redo\"),\n    order: 1\n  }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, {\n  id: 'default:redo',\n  precondition: undefined\n}));\nexport var SelectAllCommand = registerCommand(new MultiCommand({\n  id: 'editor.action.selectAll',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0 /* KeybindingWeight.EditorCore */,\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n  },\n\n  menuOpts: [{\n    menuId: MenuId.MenubarSelectionMenu,\n    group: '1_basic',\n    title: nls.localize({\n      key: 'miSelectAll',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Select All\"),\n    order: 1\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('selectAll', \"Select All\"),\n    order: 1\n  }]\n}));","map":{"version":3,"names":["nls","URI","ICodeEditorService","Position","IModelService","ITextModelService","MenuId","MenuRegistry","Action2","CommandsRegistry","ContextKeyExpr","IContextKeyService","IInstantiationService","KeybindingsRegistry","Registry","ITelemetryService","withNullAsUndefined","assertType","ILogService","Command","opts","_classCallCheck","id","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","_description","description","_createClass","key","value","register","_this","Array","isArray","forEach","_registerMenuItem","kbOptsArr","_iterator","_createForOfIteratorHelper","_step","s","n","done","kbWhen","kbExpr","and","desc","weight","args","when","primary","secondary","win","linux","mac","registerKeybindingRule","err","e","f","registerCommand","handler","accessor","runCommand","item","appendMenuItem","menuId","group","command","title","icon","order","MultiCommand","_Command","_inherits","_super","_createSuper","_this2","apply","arguments","_implementations","addImplementation","priority","name","implementation","_this3","push","sort","a","b","dispose","i","length","splice","logService","get","trace","concat","_iterator2","_step2","impl","result","ProxyCommand","_Command2","_super2","_this4","call","EditorCommand","_Command3","_super3","_this5","runEditorCommand","editor","bindToContribution","controllerGetter","_EditorCommand","EditorControllerCommandImpl","_super4","_this6","_callback","controller","runner","codeEditorService","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","kbService","contextMatchesRules","EditorAction","_EditorCommand2","_super5","_this7","convertOptions","label","alias","reportTelemetry","run","publicLog2","withDefaults","EditorContext","contextMenuOpts","_toConsumableArray","map","MultiEditorAction","_EditorAction","_super6","_this8","_this9","_iterator3","_step3","EditorAction2","_Action","_super7","_this10","_len","_key","registerModelAndPositionCommand","_len2","_key2","instaService","resource","position","isUri","isIPosition","model","getModel","editorPosition","lift","invokeFunction","slice","createModelReference","then","reference","Promise","resolve","reject","object","textEditorModel","finally","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","action","registerMultiEditorAction","registerInstantiatedEditorAction","editorAction","registerEditorContribution","instantiation","EditorExtensionsRegistry","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","Extensions","EditorCommonContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","Object","create","add","UndoCommand","undefined","MenubarEditMenu","localize","comment","CommandPalette","RedoCommand","SelectAllCommand","MenubarSelectionMenu"],"sources":["/Users/cadany/WebstormProjects/monaco/node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this._description = opts.description;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            description: this._description\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation) {\n        this._implementations.push({ priority, name, implementation });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    static runEditorCommand(accessor, args, precondition, runner) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(withNullAsUndefined(precondition))) {\n                // precondition does not hold\n                return;\n            }\n            return runner(editorAccessor, editor, args);\n        });\n    }\n    runCommand(accessor, args) {\n        return EditorCommand.runEditorCommand(accessor, args, this.precondition, (accessor, editor, args) => this.runEditorCommand(accessor, editor, args));\n    }\n}\nexport class EditorAction extends EditorCommand {\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion EditorAction\n//#region EditorAction2\nexport class EditorAction2 extends Action2 {\n    run(accessor, ...args) {\n        // Find the editor with text focus or active\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        // precondition does hold\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (kbService.contextMatchesRules(withNullAsUndefined(this.desc.precondition))) {\n                return this.runEditorCommand(editorAccessor, editor, ...args);\n            }\n        });\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor, instantiation) {\n        this.editorContributions.push({ id, ctor: ctor, instantiation });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions;\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
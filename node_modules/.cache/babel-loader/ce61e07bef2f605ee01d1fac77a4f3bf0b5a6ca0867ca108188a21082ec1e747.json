{"ast":null,"code":"import _regeneratorRuntime from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/cadany/WebstormProjects/monaco/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ThrottledDelayer } from '../../../common/async.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../common/types.js';\nexport var StorageHint;\n(function (StorageHint) {\n  // A hint to the storage that the storage\n  // does not exist on disk yet. This allows\n  // the storage library to improve startup\n  // time by not checking the storage for data.\n  StorageHint[StorageHint[\"STORAGE_DOES_NOT_EXIST\"] = 0] = \"STORAGE_DOES_NOT_EXIST\";\n  // A hint to the storage that the storage\n  // is backed by an in-memory storage.\n  StorageHint[StorageHint[\"STORAGE_IN_MEMORY\"] = 1] = \"STORAGE_IN_MEMORY\";\n})(StorageHint || (StorageHint = {}));\nexport var StorageState;\n(function (StorageState) {\n  StorageState[StorageState[\"None\"] = 0] = \"None\";\n  StorageState[StorageState[\"Initialized\"] = 1] = \"Initialized\";\n  StorageState[StorageState[\"Closed\"] = 2] = \"Closed\";\n})(StorageState || (StorageState = {}));\nvar Storage = /*#__PURE__*/function (_Disposable) {\n  _inherits(Storage, _Disposable);\n  var _super = _createSuper(Storage);\n  function Storage(database) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.create(null);\n    _classCallCheck(this, Storage);\n    _this = _super.call(this);\n    _this.database = database;\n    _this.options = options;\n    _this._onDidChangeStorage = _this._register(new Emitter());\n    _this.onDidChangeStorage = _this._onDidChangeStorage.event;\n    _this.state = StorageState.None;\n    _this.cache = new Map();\n    _this.flushDelayer = new ThrottledDelayer(Storage.DEFAULT_FLUSH_DELAY);\n    _this.pendingDeletes = new Set();\n    _this.pendingInserts = new Map();\n    _this.whenFlushedCallbacks = [];\n    _this.registerListeners();\n    return _this;\n  }\n  _createClass(Storage, [{\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this2 = this;\n      this._register(this.database.onDidChangeItemsExternal(function (e) {\n        return _this2.onDidChangeItemsExternal(e);\n      }));\n    }\n  }, {\n    key: \"onDidChangeItemsExternal\",\n    value: function onDidChangeItemsExternal(e) {\n      var _this3 = this;\n      var _a, _b;\n      // items that change external require us to update our\n      // caches with the values. we just accept the value and\n      // emit an event if there is a change.\n      (_a = e.changed) === null || _a === void 0 ? void 0 : _a.forEach(function (value, key) {\n        return _this3.accept(key, value);\n      });\n      (_b = e.deleted) === null || _b === void 0 ? void 0 : _b.forEach(function (key) {\n        return _this3.accept(key, undefined);\n      });\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(key, value) {\n      if (this.state === StorageState.Closed) {\n        return; // Return early if we are already closed\n      }\n\n      var changed = false;\n      // Item got removed, check for deletion\n      if (isUndefinedOrNull(value)) {\n        changed = this.cache.delete(key);\n      }\n      // Item got updated, check for change\n      else {\n        var currentValue = this.cache.get(key);\n        if (currentValue !== value) {\n          this.cache.set(key, value);\n          changed = true;\n        }\n      }\n      // Signal to outside listeners\n      if (changed) {\n        this._onDidChangeStorage.fire(key);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, fallbackValue) {\n      var value = this.cache.get(key);\n      if (isUndefinedOrNull(value)) {\n        return fallbackValue;\n      }\n      return value;\n    }\n  }, {\n    key: \"getBoolean\",\n    value: function getBoolean(key, fallbackValue) {\n      var value = this.get(key);\n      if (isUndefinedOrNull(value)) {\n        return fallbackValue;\n      }\n      return value === 'true';\n    }\n  }, {\n    key: \"getNumber\",\n    value: function getNumber(key, fallbackValue) {\n      var value = this.get(key);\n      if (isUndefinedOrNull(value)) {\n        return fallbackValue;\n      }\n      return parseInt(value, 10);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var valueStr, currentValue;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.state === StorageState.Closed)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              if (!isUndefinedOrNull(value)) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", this.delete(key));\n            case 4:\n              // Otherwise, convert to String and store\n              valueStr = String(value); // Return early if value already set\n              currentValue = this.cache.get(key);\n              if (!(currentValue === valueStr)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 8:\n              // Update in cache and pending\n              this.cache.set(key, valueStr);\n              this.pendingInserts.set(key, valueStr);\n              this.pendingDeletes.delete(key);\n              // Event\n              this._onDidChangeStorage.fire(key);\n              // Accumulate work by scheduling after timeout\n              return _context.abrupt(\"return\", this.doFlush());\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var wasDeleted;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this.state === StorageState.Closed)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              // Remove from cache and add to pending\n              wasDeleted = this.cache.delete(key);\n              if (wasDeleted) {\n                _context2.next = 5;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 5:\n              if (!this.pendingDeletes.has(key)) {\n                this.pendingDeletes.add(key);\n              }\n              this.pendingInserts.delete(key);\n              // Event\n              this._onDidChangeStorage.fire(key);\n              // Accumulate work by scheduling after timeout\n              return _context2.abrupt(\"return\", this.doFlush());\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"hasPending\",\n    get: function get() {\n      return this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n    }\n  }, {\n    key: \"flushPending\",\n    value: function flushPending() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this4 = this;\n        var updateRequest;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.hasPending) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              // Get pending data\n              updateRequest = {\n                insert: this.pendingInserts,\n                delete: this.pendingDeletes\n              }; // Reset pending data for next run\n              this.pendingDeletes = new Set();\n              this.pendingInserts = new Map();\n              // Update in storage and release any\n              // waiters we have once done\n              return _context3.abrupt(\"return\", this.database.updateItems(updateRequest).finally(function () {\n                var _a;\n                if (!_this4.hasPending) {\n                  while (_this4.whenFlushedCallbacks.length) {\n                    (_a = _this4.whenFlushedCallbacks.pop()) === null || _a === void 0 ? void 0 : _a();\n                  }\n                }\n              }));\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"doFlush\",\n    value: function doFlush(delay) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this5 = this;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", this.flushDelayer.trigger(function () {\n                return _this5.flushPending();\n              }, delay));\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.flushDelayer.dispose();\n      _get(_getPrototypeOf(Storage.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n  return Storage;\n}(Disposable);\nStorage.DEFAULT_FLUSH_DELAY = 100;\nexport { Storage };\nexport var InMemoryStorageDatabase = /*#__PURE__*/function () {\n  function InMemoryStorageDatabase() {\n    _classCallCheck(this, InMemoryStorageDatabase);\n    this.onDidChangeItemsExternal = Event.None;\n    this.items = new Map();\n  }\n  _createClass(InMemoryStorageDatabase, [{\n    key: \"updateItems\",\n    value: function updateItems(request) {\n      var _a, _b;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this6 = this;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              (_a = request.insert) === null || _a === void 0 ? void 0 : _a.forEach(function (value, key) {\n                return _this6.items.set(key, value);\n              });\n              (_b = request.delete) === null || _b === void 0 ? void 0 : _b.forEach(function (key) {\n                return _this6.items.delete(key);\n              });\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n    }\n  }]);\n  return InMemoryStorageDatabase;\n}();","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","ThrottledDelayer","Emitter","Event","Disposable","isUndefinedOrNull","StorageHint","StorageState","Storage","_Disposable","_inherits","_super","_createSuper","database","_this","options","arguments","length","undefined","Object","create","_classCallCheck","call","_onDidChangeStorage","_register","onDidChangeStorage","event","state","None","cache","Map","flushDelayer","DEFAULT_FLUSH_DELAY","pendingDeletes","Set","pendingInserts","whenFlushedCallbacks","registerListeners","_createClass","key","_this2","onDidChangeItemsExternal","_this3","_a","_b","changed","forEach","accept","deleted","Closed","delete","currentValue","get","set","fire","fallbackValue","getBoolean","getNumber","parseInt","_regeneratorRuntime","mark","_callee","valueStr","wrap","_callee$","_context","prev","abrupt","String","doFlush","stop","_delete","_callee2","wasDeleted","_callee2$","_context2","has","add","size","flushPending","_callee3","_this4","updateRequest","_callee3$","_context3","hasPending","insert","updateItems","finally","pop","delay","_callee4","_this5","_callee4$","_context4","trigger","dispose","_get","_getPrototypeOf","prototype","InMemoryStorageDatabase","items","request","_callee5","_this6","_callee5$","_context5"],"sources":["/Users/cadany/WebstormProjects/monaco/node_modules/monaco-editor/esm/vs/base/parts/storage/common/storage.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ThrottledDelayer } from '../../../common/async.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../common/types.js';\nexport var StorageHint;\n(function (StorageHint) {\n    // A hint to the storage that the storage\n    // does not exist on disk yet. This allows\n    // the storage library to improve startup\n    // time by not checking the storage for data.\n    StorageHint[StorageHint[\"STORAGE_DOES_NOT_EXIST\"] = 0] = \"STORAGE_DOES_NOT_EXIST\";\n    // A hint to the storage that the storage\n    // is backed by an in-memory storage.\n    StorageHint[StorageHint[\"STORAGE_IN_MEMORY\"] = 1] = \"STORAGE_IN_MEMORY\";\n})(StorageHint || (StorageHint = {}));\nexport var StorageState;\n(function (StorageState) {\n    StorageState[StorageState[\"None\"] = 0] = \"None\";\n    StorageState[StorageState[\"Initialized\"] = 1] = \"Initialized\";\n    StorageState[StorageState[\"Closed\"] = 2] = \"Closed\";\n})(StorageState || (StorageState = {}));\nclass Storage extends Disposable {\n    constructor(database, options = Object.create(null)) {\n        super();\n        this.database = database;\n        this.options = options;\n        this._onDidChangeStorage = this._register(new Emitter());\n        this.onDidChangeStorage = this._onDidChangeStorage.event;\n        this.state = StorageState.None;\n        this.cache = new Map();\n        this.flushDelayer = new ThrottledDelayer(Storage.DEFAULT_FLUSH_DELAY);\n        this.pendingDeletes = new Set();\n        this.pendingInserts = new Map();\n        this.whenFlushedCallbacks = [];\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n    }\n    onDidChangeItemsExternal(e) {\n        var _a, _b;\n        // items that change external require us to update our\n        // caches with the values. we just accept the value and\n        // emit an event if there is a change.\n        (_a = e.changed) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => this.accept(key, value));\n        (_b = e.deleted) === null || _b === void 0 ? void 0 : _b.forEach(key => this.accept(key, undefined));\n    }\n    accept(key, value) {\n        if (this.state === StorageState.Closed) {\n            return; // Return early if we are already closed\n        }\n        let changed = false;\n        // Item got removed, check for deletion\n        if (isUndefinedOrNull(value)) {\n            changed = this.cache.delete(key);\n        }\n        // Item got updated, check for change\n        else {\n            const currentValue = this.cache.get(key);\n            if (currentValue !== value) {\n                this.cache.set(key, value);\n                changed = true;\n            }\n        }\n        // Signal to outside listeners\n        if (changed) {\n            this._onDidChangeStorage.fire(key);\n        }\n    }\n    get(key, fallbackValue) {\n        const value = this.cache.get(key);\n        if (isUndefinedOrNull(value)) {\n            return fallbackValue;\n        }\n        return value;\n    }\n    getBoolean(key, fallbackValue) {\n        const value = this.get(key);\n        if (isUndefinedOrNull(value)) {\n            return fallbackValue;\n        }\n        return value === 'true';\n    }\n    getNumber(key, fallbackValue) {\n        const value = this.get(key);\n        if (isUndefinedOrNull(value)) {\n            return fallbackValue;\n        }\n        return parseInt(value, 10);\n    }\n    set(key, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === StorageState.Closed) {\n                return; // Return early if we are already closed\n            }\n            // We remove the key for undefined/null values\n            if (isUndefinedOrNull(value)) {\n                return this.delete(key);\n            }\n            // Otherwise, convert to String and store\n            const valueStr = String(value);\n            // Return early if value already set\n            const currentValue = this.cache.get(key);\n            if (currentValue === valueStr) {\n                return;\n            }\n            // Update in cache and pending\n            this.cache.set(key, valueStr);\n            this.pendingInserts.set(key, valueStr);\n            this.pendingDeletes.delete(key);\n            // Event\n            this._onDidChangeStorage.fire(key);\n            // Accumulate work by scheduling after timeout\n            return this.doFlush();\n        });\n    }\n    delete(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === StorageState.Closed) {\n                return; // Return early if we are already closed\n            }\n            // Remove from cache and add to pending\n            const wasDeleted = this.cache.delete(key);\n            if (!wasDeleted) {\n                return; // Return early if value already deleted\n            }\n            if (!this.pendingDeletes.has(key)) {\n                this.pendingDeletes.add(key);\n            }\n            this.pendingInserts.delete(key);\n            // Event\n            this._onDidChangeStorage.fire(key);\n            // Accumulate work by scheduling after timeout\n            return this.doFlush();\n        });\n    }\n    get hasPending() {\n        return this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n    }\n    flushPending() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hasPending) {\n                return; // return early if nothing to do\n            }\n            // Get pending data\n            const updateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n            // Reset pending data for next run\n            this.pendingDeletes = new Set();\n            this.pendingInserts = new Map();\n            // Update in storage and release any\n            // waiters we have once done\n            return this.database.updateItems(updateRequest).finally(() => {\n                var _a;\n                if (!this.hasPending) {\n                    while (this.whenFlushedCallbacks.length) {\n                        (_a = this.whenFlushedCallbacks.pop()) === null || _a === void 0 ? void 0 : _a();\n                    }\n                }\n            });\n        });\n    }\n    doFlush(delay) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.flushDelayer.trigger(() => this.flushPending(), delay);\n        });\n    }\n    dispose() {\n        this.flushDelayer.dispose();\n        super.dispose();\n    }\n}\nStorage.DEFAULT_FLUSH_DELAY = 100;\nexport { Storage };\nexport class InMemoryStorageDatabase {\n    constructor() {\n        this.onDidChangeItemsExternal = Event.None;\n        this.items = new Map();\n    }\n    updateItems(request) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = request.insert) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => this.items.set(key, value));\n            (_b = request.delete) === null || _b === void 0 ? void 0 : _b.forEach(key => this.items.delete(key));\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
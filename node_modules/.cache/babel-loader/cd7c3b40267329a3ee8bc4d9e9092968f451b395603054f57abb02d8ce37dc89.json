{"ast":null,"code":"var _jsxFileName = \"/Users/cadany/WebstormProjects/monaco/src/BaseEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as monaco from 'monaco-editor';\n// import * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// window.MonacoEnvironment = {\n//     getWorker: function (_moduleId: any, label: string) {\n//         // console.log(metadata.languages);\n//         switch (label) {\n//             case 'editorWorkerService':\n//                 return new Worker(new URL('monaco-editor/esm/vs/editor/editor.worker', import.meta.url));\n//             case 'css':\n//             case 'less':\n//             case 'scss':\n//                 return new Worker(new URL('monaco-editor/esm/vs/language/css/css.worker', import.meta.url));\n//             case 'handlebars':\n//             case 'html':\n//             case 'razor':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/html/html.worker', import.meta.url),\n//                 );\n//             case 'json':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/json/json.worker', import.meta.url),\n//                 );\n//             case 'javascript':\n//             case 'typescript':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/typescript/ts.worker', import.meta.url),\n//                 );\n//             default:\n//                 throw new Error(`Unknown label ${label}`);\n//         }\n//     }\n// };\n\nexport const BaseEditor = () => {\n  _s();\n  const container = useRef(null);\n  let editor;\n  useEffect(() => {\n    if (container.current) {\n      editor = monaco.editor.create(container.current, {\n        value: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n        language: 'javascript',\n        minimap: {\n          enabled: false\n        }\n      });\n    }\n    return () => {\n      editor.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Editor\",\n    ref: container,\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n_s(BaseEditor, \"gP936EAkbq44zYYGRnj90r2fLhg=\");\n_c = BaseEditor;\nvar _c;\n$RefreshReg$(_c, \"BaseEditor\");","map":{"version":3,"names":["React","useRef","useEffect","monaco","jsxDEV","_jsxDEV","BaseEditor","_s","container","editor","current","create","value","join","language","minimap","enabled","dispose","className","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cadany/WebstormProjects/monaco/src/BaseEditor.tsx"],"sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport * as monaco from 'monaco-editor';\n// import * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport { language as sqlLanguage } from 'monaco-editor/esm/vs/basic-languages/sql/sql';\n\n\n// window.MonacoEnvironment = {\n//     getWorker: function (_moduleId: any, label: string) {\n//         // console.log(metadata.languages);\n//         switch (label) {\n//             case 'editorWorkerService':\n//                 return new Worker(new URL('monaco-editor/esm/vs/editor/editor.worker', import.meta.url));\n//             case 'css':\n//             case 'less':\n//             case 'scss':\n//                 return new Worker(new URL('monaco-editor/esm/vs/language/css/css.worker', import.meta.url));\n//             case 'handlebars':\n//             case 'html':\n//             case 'razor':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/html/html.worker', import.meta.url),\n//                 );\n//             case 'json':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/json/json.worker', import.meta.url),\n//                 );\n//             case 'javascript':\n//             case 'typescript':\n//                 return new Worker(\n//                     new URL('monaco-editor/esm/vs/language/typescript/ts.worker', import.meta.url),\n//                 );\n//             default:\n//                 throw new Error(`Unknown label ${label}`);\n//         }\n//     }\n// };\n\nexport const BaseEditor: React.FC = () => {\n    const container = useRef<HTMLDivElement>(null);\n    let editor: monaco.editor.IStandaloneCodeEditor;\n    useEffect(() => {\n        if (container.current) {\n            editor = monaco.editor.create(container.current, {\n                value: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n                language: 'javascript',\n                minimap:{enabled:false}\n            });\n        }\n        return () => {\n            editor.dispose();\n        };\n    }, []);\n    return <div className=\"Editor\" ref={container} style={{height: \"100vh\", width: \"100vw\"}}></div>;\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAC9C,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAMC,SAAS,GAAGP,MAAM,CAAiB,IAAI,CAAC;EAC9C,IAAIQ,MAA2C;EAC/CP,SAAS,CAAC,MAAM;IACZ,IAAIM,SAAS,CAACE,OAAO,EAAE;MACnBD,MAAM,GAAGN,MAAM,CAACM,MAAM,CAACE,MAAM,CAACH,SAAS,CAACE,OAAO,EAAE;QAC7CE,KAAK,EAAE,CAAC,gBAAgB,EAAE,gCAAgC,EAAE,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;QAC3EC,QAAQ,EAAE,YAAY;QACtBC,OAAO,EAAC;UAACC,OAAO,EAAC;QAAK;MAC1B,CAAC,CAAC;IACN;IACA,OAAO,MAAM;MACTP,MAAM,CAACQ,OAAO,EAAE;IACpB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOZ,OAAA;IAAKa,SAAS,EAAC,QAAQ;IAACC,GAAG,EAAEX,SAAU;IAACY,KAAK,EAAE;MAACC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACnG,CAAC;AAACnB,EAAA,CAhBWD,UAAoB;AAAAqB,EAAA,GAApBrB,UAAoB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
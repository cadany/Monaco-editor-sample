{"ast":null,"code":"var _jsxFileName = \"/Users/cadany/WebstormProjects/monaco/src/BaseEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as monaco from 'monaco-editor';\n// import * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\n// import 'monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution';\nimport 'monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.MonacoEnvironment = {\n  getWorker: function (_moduleId, label) {\n    // console.log(metadata.languages);\n    switch (label) {\n      case 'editorWorkerService':\n        return new Worker(new URL('monaco-editor/esm/vs/editor/editor.worker', import.meta.url));\n      case 'css':\n      case 'less':\n      case 'scss':\n        return new Worker(new URL('monaco-editor/esm/vs/language/css/css.worker', import.meta.url));\n      case 'handlebars':\n      case 'html':\n      case 'razor':\n        return new Worker(new URL('monaco-editor/esm/vs/language/html/html.worker', import.meta.url));\n      case 'json':\n        return new Worker(new URL('monaco-editor/esm/vs/language/json/json.worker', import.meta.url));\n      case 'javascript':\n      case 'typescript':\n        return new Worker(new URL('monaco-editor/esm/vs/language/typescript/ts.worker', import.meta.url));\n      default:\n        throw new Error(`Unknown label ${label}`);\n    }\n  }\n};\nexport const BaseEditor = () => {\n  _s();\n  const container = useRef(null);\n  let editor;\n  useEffect(() => {\n    if (container.current) {\n      editor = monaco.editor.create(container.current, {\n        value: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n        language: 'sql',\n        minimap: {\n          enabled: false\n        }\n      });\n      monaco.languages.registerCompletionItemProvider('sql', {\n        triggerCharacters: ['.', ...keywords],\n        provideCompletionItems: (model, position) => {\n          let suggestions = [];\n          const {\n            lineNumber,\n            column\n          } = position;\n          const textBeforePointer = model.getValueInRange({\n            startLineNumber: lineNumber,\n            startColumn: 0,\n            endLineNumber: lineNumber,\n            endColumn: column\n          });\n          const tokens = textBeforePointer.trim().split(/\\s+/);\n          const lastToken = tokens[tokens.length - 1]; // 获取最后一段非空字符串\n          if (lastToken.endsWith('.')) {\n            const tokenNoDot = lastToken.slice(0, lastToken.length - 1);\n            if (Object.keys(_that.hintData).includes(tokenNoDot)) {\n              suggestions = [..._that.getTableSuggest(tokenNoDot)];\n            }\n          } else if (lastToken === '.') {\n            suggestions = [];\n          } else {\n            suggestions = [..._that.getDBSuggest(), ..._that.getSQLSuggest()];\n          }\n          return {\n            suggestions\n          };\n        }\n      });\n    }\n    return () => {\n      editor.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Editor\",\n    ref: container,\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 12\n  }, this);\n};\n_s(BaseEditor, \"gP936EAkbq44zYYGRnj90r2fLhg=\");\n_c = BaseEditor;\nvar _c;\n$RefreshReg$(_c, \"BaseEditor\");","map":{"version":3,"names":["React","useRef","useEffect","monaco","jsxDEV","_jsxDEV","window","MonacoEnvironment","getWorker","_moduleId","label","Worker","URL","import","meta","url","Error","BaseEditor","_s","container","editor","current","create","value","join","language","minimap","enabled","languages","registerCompletionItemProvider","triggerCharacters","keywords","provideCompletionItems","model","position","suggestions","lineNumber","column","textBeforePointer","getValueInRange","startLineNumber","startColumn","endLineNumber","endColumn","tokens","trim","split","lastToken","length","endsWith","tokenNoDot","slice","Object","keys","_that","hintData","includes","getTableSuggest","getDBSuggest","getSQLSuggest","dispose","className","ref","style","height","width","fileName","_jsxFileName","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cadany/WebstormProjects/monaco/src/BaseEditor.tsx"],"sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport * as monaco from 'monaco-editor';\n// import * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\n// import 'monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution';\nimport 'monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution';\nimport metadata from 'monaco-editor/esm/metadata';\n\n\nwindow.MonacoEnvironment = {\n    getWorker: function (_moduleId: any, label: string) {\n        // console.log(metadata.languages);\n        switch (label) {\n            case 'editorWorkerService':\n                return new Worker(new URL('monaco-editor/esm/vs/editor/editor.worker', import.meta.url));\n            case 'css':\n            case 'less':\n            case 'scss':\n                return new Worker(new URL('monaco-editor/esm/vs/language/css/css.worker', import.meta.url));\n            case 'handlebars':\n            case 'html':\n            case 'razor':\n                return new Worker(\n                    new URL('monaco-editor/esm/vs/language/html/html.worker', import.meta.url),\n                );\n            case 'json':\n                return new Worker(\n                    new URL('monaco-editor/esm/vs/language/json/json.worker', import.meta.url),\n                );\n            case 'javascript':\n            case 'typescript':\n                return new Worker(\n                    new URL('monaco-editor/esm/vs/language/typescript/ts.worker', import.meta.url),\n                );\n            default:\n                throw new Error(`Unknown label ${label}`);\n        }\n    }\n};\n\nexport const BaseEditor: React.FC = () => {\n    const container = useRef<HTMLDivElement>(null);\n    let editor: monaco.editor.IStandaloneCodeEditor;\n    useEffect(() => {\n        if (container.current) {\n            editor = monaco.editor.create(container.current, {\n                value: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n                language: 'sql',\n                minimap:{enabled:false}\n            });\n\n            monaco.languages.registerCompletionItemProvider('sql', {\n                triggerCharacters: ['.', ...keywords],\n                provideCompletionItems: (model, position) => {\n                    let suggestions = []\n                    const { lineNumber, column } = position\n                    const textBeforePointer = model.getValueInRange({\n                        startLineNumber: lineNumber,\n                        startColumn: 0,\n                        endLineNumber: lineNumber,\n                        endColumn: column,\n                    })\n                    const tokens = textBeforePointer.trim().split(/\\s+/)\n                    const lastToken = tokens[tokens.length - 1] // 获取最后一段非空字符串\n                    if (lastToken.endsWith('.')) {\n                        const tokenNoDot = lastToken.slice(0, lastToken.length - 1)\n                        if (Object.keys(_that.hintData).includes(tokenNoDot)) {\n                            suggestions = [..._that.getTableSuggest(tokenNoDot)]\n                        }\n                    } else if (lastToken === '.') {\n                        suggestions = []\n                    } else {\n                        suggestions = [..._that.getDBSuggest(), ..._that.getSQLSuggest()]\n                    }\n                    return {\n                        suggestions,\n                    }\n                },\n            })\n\n        }\n        return () => {\n            editor.dispose();\n        };\n    }, []);\n    return <div className=\"Editor\" ref={container} style={{height: \"100vh\", width: \"100vw\"}}></div>;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
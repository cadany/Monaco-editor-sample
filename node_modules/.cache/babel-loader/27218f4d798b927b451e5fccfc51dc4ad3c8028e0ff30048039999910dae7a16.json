{"ast":null,"code":"var _jsxFileName = \"/Users/cadany/WebstormProjects/monaco/src/MultiEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { CodeEditor } from \"./CodeEditor\";\nimport { editor } from \"monaco-editor\";\nvar ITextModel = editor.ITextModel;\nvar ICodeEditorViewState = editor.ICodeEditorViewState;\nimport { Button, Empty, Tabs } from \"antd\";\nimport * as monaco from \"monaco-editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MultiEditor = () => {\n  _s();\n  const [currentModel, setCurrentModel] = useState({\n    viewstate: null\n  });\n  const [activeKey, setActiveKey] = useState(\"0\");\n  const [items, setItems] = useState([]);\n  const newTabIndex = useRef(1);\n  const WorkerEmpty = () => /*#__PURE__*/_jsxDEV(Empty, {\n    imageStyle: {\n      height: 60\n    },\n    description: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u65E0SQL\\u67E5\\u8BE2\\u7F16\\u8F91\\u5668\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: add,\n      children: \"Create Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n  const renderTabBar = (props, DefaultTabBar) => /*#__PURE__*/_jsxDEV(DefaultTabBar, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n  const onChange = activeKey => {\n    console.log(\"tab change\");\n    setActiveKey(activeKey);\n    let idx = items.findIndex(v => v.key === activeKey);\n    if (idx >= 0 && items[idx].modelState) {\n      // setCurrentModel(items[idx].modelState);\n    }\n  };\n  const add = () => {\n    console.log(\"add\");\n    const newActivekey = `sql-${newTabIndex.current++}`;\n    const newModel = {\n      standaloneEditorConstructionOptions: {\n        language: \"mysql\",\n        model: monaco.editor.createModel(\"select * from table\", \"mysql\")\n      },\n      viewstate: null\n    };\n    setItems([...items, {\n      key: newActivekey,\n      label: newActivekey,\n      modelState: newModel\n    }]);\n  };\n  const remove = e => {\n    console.log(\"remove\" + e);\n  };\n  const onEdit = (e, action) => {\n    if (action === 'add') add();else remove(e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      id: \"mutil_code_editor\",\n      type: \"editable-card\",\n      tabBarStyle: {\n        height: 25\n      },\n      items: items,\n      onChange: onChange,\n      onEdit: onEdit,\n      renderTabBar: renderTabBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), items.length > 0 ? /*#__PURE__*/_jsxDEV(CodeEditor, {\n      viewstate: currentModel.viewstate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(WorkerEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 87\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(MultiEditor, \"ay0N0XhbPPYHLCmOAPvGjel9t74=\");\n_c = MultiEditor;\nvar _c;\n$RefreshReg$(_c, \"MultiEditor\");","map":{"version":3,"names":["React","useRef","useState","CodeEditor","editor","ITextModel","ICodeEditorViewState","Button","Empty","Tabs","monaco","jsxDEV","_jsxDEV","MultiEditor","_s","currentModel","setCurrentModel","viewstate","activeKey","setActiveKey","items","setItems","newTabIndex","WorkerEmpty","imageStyle","height","description","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","add","renderTabBar","props","DefaultTabBar","onChange","console","log","idx","findIndex","v","key","modelState","newActivekey","current","newModel","standaloneEditorConstructionOptions","language","model","createModel","label","remove","e","onEdit","action","style","width","id","tabBarStyle","length","_c","$RefreshReg$"],"sources":["/Users/cadany/WebstormProjects/monaco/src/MultiEditor.tsx"],"sourcesContent":["import React, {useRef, useState} from \"react\";\nimport {Content} from \"antd/es/layout/layout\";\nimport {CodeEditor, IModelState} from \"./CodeEditor\";\nimport {editor} from \"monaco-editor\";\nimport ITextModel = editor.ITextModel;\nimport ICodeEditorViewState = editor.ICodeEditorViewState;\nimport {Button, Empty, Tabs, TabsProps} from \"antd\";\nimport * as monaco from \"monaco-editor\";\n\ntype TargetKey = React.MouseEvent | React.KeyboardEvent | string;\n\n\ninterface IPane {\n    key: string\n    label: string\n    children?: React.ReactNode\n    modelState?: IModelState\n}\n\n\n\n\nexport const MultiEditor: React.FC = () => {\n\n    const [currentModel, setCurrentModel] = useState<IModelState>({viewstate: null})\n    const [activeKey, setActiveKey] = useState(\"0\");\n    const [items, setItems] = useState<IPane[]>([]);\n    const newTabIndex = useRef(1);\n    const WorkerEmpty = () =>\n        <Empty\n            imageStyle={{height: 60}}\n            description={\n                <span>无SQL查询编辑器</span>\n            }>\n            <Button type=\"primary\" onClick={add}>Create Now</Button>\n        </Empty>\n\n    const renderTabBar: TabsProps['renderTabBar'] = (props, DefaultTabBar) => (\n        <DefaultTabBar {...props} />\n    );\n\n    const onChange = (activeKey: string) => {\n        console.log(\"tab change\");\n        setActiveKey(activeKey);\n        let idx = items.findIndex((v)=>v.key===activeKey);\n        if(idx>=0 && items[idx].modelState){\n            // setCurrentModel(items[idx].modelState);\n        }\n    }\n\n    const add = () => {\n        console.log(\"add\");\n        const newActivekey = `sql-${newTabIndex.current++}`;\n        const newModel: IModelState = {\n            standaloneEditorConstructionOptions: {language:\"mysql\", model: monaco.editor.createModel(\"select * from table\", \"mysql\")},\n            viewstate: null\n        };\n        setItems([...items, {key: newActivekey, label: newActivekey, modelState: newModel}]);\n    }\n\n    const remove = (e: TargetKey) => {\n        console.log(\"remove\" + e)\n    }\n\n    const onEdit = (e: React.MouseEvent | React.KeyboardEvent | string, action: string) => {\n        if (action === 'add') add();\n        else remove(e);\n    }\n\n    return (\n        <div style={{height: \"100vh\", width: \"100vw\"}}>\n            <Tabs\n                id={\"mutil_code_editor\"}\n                type=\"editable-card\"\n                tabBarStyle={{height: 25}}\n                items={items}\n                onChange={onChange}\n                onEdit={onEdit}\n                renderTabBar={renderTabBar}\n            />\n            {\n                items.length > 0 ? <CodeEditor viewstate={currentModel.viewstate}/> : <WorkerEmpty></WorkerEmpty>\n            }\n\n        </div>\n    );\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}